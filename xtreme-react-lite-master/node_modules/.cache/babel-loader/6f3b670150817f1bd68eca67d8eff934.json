{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\n\nvar stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\n\nvar hasBasename = exports.hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\n\nvar stripBasename = exports.stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\n\nvar stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\n\nvar parsePath = exports.parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nvar createPath = exports.createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return path;\n};","map":{"version":3,"sources":["/Users/sulbhaaggarwal/Documents/Hackathon/TechnicaActual/xtreme-react-lite-master/node_modules/history/PathUtils.js"],"names":["exports","__esModule","addLeadingSlash","path","charAt","stripLeadingSlash","substr","hasBasename","prefix","RegExp","test","stripBasename","length","stripTrailingSlash","slice","parsePath","pathname","search","hash","hashIndex","indexOf","searchIndex","createPath","location"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nvar addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\n\nvar stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\n\nvar hasBasename = exports.hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\n\nvar stripBasename = exports.stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\n\nvar stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\n\nvar parsePath = exports.parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nvar createPath = exports.createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n\n\n  var path = pathname || '/';\n\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n\n  return path;\n};"]},"metadata":{},"sourceType":"script"}